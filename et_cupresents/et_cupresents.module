<?php

/**
 * @file
 * Drupal hooks for et_cupresents module.
 */

/**
 * Callback to generate form components for CU Presents embed type.
 *
 * @param array $form
 *   Contains the original embed form.
 * @param array $form_state
 *   The state of the original embed form.
 * @param int|null $id
 *   ID of the embed entity.
 * @param array $data
 *   Data passed in of the old embed if it exists.
 */
function et_cupresents_form_options(&$form, &$form_state, $id = NULL, $data = array()) {

  // No block or bean will need to have a path.
  $form['embed']['path']['#access'] = FALSE;

  $form['options'] = array(
    '#type' => 'fieldset',
    '#title' => t('Embed Data'),
    '#weight' => -10,
  );

  $form['options']['tags'] = array(
    '#title' => t('Tags'),
    '#description' => t('A list of comma-separated tags.'),
    '#type' => 'textfield',
    '#default_value' => !empty($data['tags']) ? $data['tags'] : '',
  );

  $form['options']['series'] = array(
    '#title' => t('Series'),
    '#description' => t('A list of comma-separated series.'),
    '#type' => 'textfield',
    '#default_value' => !empty($data['series']) ? $data['series'] : '',
  );

  $performance_options = array(
    'performance' => 'Performance',
    'preshow_talk' => 'Preshow Talk',
    'talkback' => 'Talkback',
    'public_class' => 'Public Class',
    'camp' => 'Camp',
    'master_class' => 'Master Class',
    'public_talk' => 'Public Talk',
  );

  $form['options']['performance_type'] = array(
    '#title' => t('Performance Type'),
    '#type' => 'checkboxes',
    '#options' => $performance_options,
    '#default_value' => !empty($data['performance_type']) ? $data['performance_type'] : '',
  );

  $form['options']['venue'] = array(
    '#title' => t('Venue'),
    '#type' => 'textfield',
    '#default_value' => !empty($data['venue']) ? $data['venue'] : '',
  );

  $form['options']['from'] = array(
    '#title' => t('From Date'),
    '#description' => t('Beginning date range to search for events.'),
    '#type' => 'textfield',
    '#default_value' => !empty($data['from']) ? $data['from'] : '',
  );

  $form['options']['to'] = array(
    '#title' => t('To Date'),
    '#description' => t('End of date range to search for events.'),
    '#type' => 'textfield',
    '#default_value' => !empty($data['to']) ? $data['to'] : '',
  );

  $form['options']['limit'] = array(
    '#title' => t('Limit'),
    '#description' => t('Limit the number of events displayed. Set to zero to have no limit.'),
    '#type' => 'textfield',
    '#default_value' => !empty($data['limit']) ? $data['limit'] : 0,
  );

  $form['options']['include_custom'] = array(
    '#title' => t('Custom'),
    '#description' => t('Choose whether to include custom events.'),
    '#type' => 'checkbox',
    '#default_value' => !empty($data['include_custom']) ? $data['include_custom'] : 1,
    '#required' => FALSE,
  );
}

/**
 * Implements hook_embed_templates_types().
 *
 * @return array
 *   List of custom embed types.
 */
function et_cupresents_embed_templates_types() {
  $custom_types = array();
  $module_path = drupal_get_path('module', 'et_cupresents');
  $default_status = 'unpublished';

  $custom_types['et_cupresents'] = array(
    'label' => 'CU Presents Event Block',
    'form_callback' => 'et_cupresents_form_options',
    'submission_callback' => 'et_beans_bean_form_submit',
    'renderer' => 'bean',
    'default_status' => $default_status,
    'path' => $module_path,
    'template' => 'templates/events-block',
  );

  return $custom_types;
}
